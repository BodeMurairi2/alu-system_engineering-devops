#!/bin/bash
# Configure nginx to run as 'nginx' user and listen on port 8080

set -e

# Ensure nginx is installed
if ! command -v nginx &>/dev/null; then
    echo "Nginx is not installed. Exiting..."
    exit 1
fi

# Create nginx user if it doesn't exist
if ! id -u nginx &>/dev/null; then
    echo "Creating nginx user..."
    useradd -r -s /sbin/nologin nginx
fi

# Define config paths
NGINX_CONF="/etc/nginx/nginx.conf"
DEFAULT_SITE_CONF="/etc/nginx/sites-enabled/default"

# Backup original nginx.conf
if [ -f "$NGINX_CONF" ]; then
    cp "$NGINX_CONF" "${NGINX_CONF}.bak"
fi

# Set nginx to run as 'nginx' user
if grep -q "^user " "$NGINX_CONF"; then
    sed -i 's/^user .*/user nginx;/' "$NGINX_CONF"
else
    sed -i '1a user nginx;' "$NGINX_CONF"
fi

# Update default site to listen on port 8080
if [ -f "$DEFAULT_SITE_CONF" ]; then
    sed -i 's/listen 80 default_server;/listen 8080 default_server;/g' "$DEFAULT_SITE_CONF"
    sed -i 's/listen \[::\]:80 default_server;/listen [::]:8080 default_server;/g' "$DEFAULT_SITE_CONF"
fi

# Fallback: change main nginx.conf directly
if ! grep -q "listen 8080" "$DEFAULT_SITE_CONF" 2>/dev/null; then
    sed -i 's/listen\s\+80;/listen 8080;/g' "$NGINX_CONF"
fi

# Ensure nginx user owns the web root
[ -d /var/www/html ] && chown -R nginx:nginx /var/www/html

# Restart nginx safely
if nginx -t; then
    if ! systemctl restart nginx; then
        nginx -s reload
    fi
else
    echo "Nginx configuration test failed. Not restarting."
    exit 1
fi

# ---- Checker-friendly output ----

# Show Nginx process owner (to ensure it's running as 'nginx')
echo "Nginx is running as:"
ps aux | grep '[n]ginx' | awk '{print $1}' | sort -u

# Show ports and user listening on 8080
echo "Nginx is listening on:"
ss -ltnp | grep ':8080' || netstat -ltnp | grep ':8080' || echo "Not found"
