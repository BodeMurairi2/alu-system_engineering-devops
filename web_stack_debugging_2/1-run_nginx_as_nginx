#!/bin/bash
# Configure nginx to run as 'nginx' user and listen on port 8080

# Exit immediately if a command exits with a non-zero status
set -e

# Ensure nginx is installed
if ! command -v nginx &>/dev/null; then
    echo "Nginx is not installed. Exiting..."
    exit 1
fi

# Create nginx user if it doesn't exist
if ! id -u nginx &>/dev/null; then
    echo "Creating nginx user..."
    useradd -r -s /sbin/nologin nginx
fi

# Define config paths
NGINX_CONF="/etc/nginx/nginx.conf"
DEFAULT_SITE_CONF="/etc/nginx/sites-enabled/default"

# Backup original nginx.conf
if [ -f "$NGINX_CONF" ]; then
    cp "$NGINX_CONF" "${NGINX_CONF}.bak"
fi

# Set nginx to run as 'nginx' user
if grep -q "^user " "$NGINX_CONF"; then
    sed -i 's/^user .*/user nginx;/' "$NGINX_CONF"
else
    # Insert the user line after the first line
    sed -i '1a user nginx;' "$NGINX_CONF"
fi

# Update default site to listen on port 8080
if [ -f "$DEFAULT_SITE_CONF" ]; then
    sed -i 's/listen 80 default_server;/listen 8080 default_server;/g' "$DEFAULT_SITE_CONF"
    sed -i 's/listen \[::\]:80 default_server;/listen [::]:8080 default_server;/g' "$DEFAULT_SITE_CONF"
fi

# If no site config found, update main nginx.conf directly
if ! grep -q "listen 8080" "$DEFAULT_SITE_CONF" 2>/dev/null; then
    sed -i 's/listen\s\+80;/listen 8080;/g' "$NGINX_CONF"
fi

# Ensure nginx user has ownership of web root
if [ -d "/var/www/html" ]; then
    chown -R nginx:nginx /var/www/html
fi

# Restart nginx safely
echo "Restarting nginx..."
if nginx -t; then
    if ! systemctl restart nginx; then
        nginx -s reload
    fi
else
    echo "Nginx configuration test failed. Not restarting."
    exit 1
fi

# Done
echo "âœ… Nginx is now running as 'nginx' user on port 8080"
